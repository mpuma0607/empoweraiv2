import { type NextRequest, NextResponse } from "next/server"
import { Resend } from "resend"
import { jsPDF } from "jspdf"

const resend = new Resend(process.env.RESEND_API_KEY)

export async function POST(request: NextRequest) {
  try {
    const { action, formData, bio } = await request.json()

    if (action === "download-pdf") {
      return await generatePDF(formData, bio)
    } else if (action === "send-email") {
      return await sendEmail(formData, bio)
    } else {
      return NextResponse.json({ error: "Invalid action" }, { status: 400 })
    }
  } catch (error) {
    console.error("Error in RealBio API:", error)
    return NextResponse.json(
      {
        error: error instanceof Error ? error.message : "Unknown error",
        details: error instanceof Error ? error.stack : error,
      },
      { status: 500 },
    )
  }
}

async function generatePDF(formData: any, bio: string) {
  try {
    // Create PDF using jsPDF
    const pdf = new jsPDF({
      orientation: "portrait",
      unit: "mm",
      format: "a4",
    })

    // Set up fonts and colors
    pdf.setFont("helvetica")

    // Header section with Vegas Gold background
    pdf.setFillColor(182, 168, 136) // Vegas Gold color
    pdf.rect(0, 0, 210, 40, "F")

    // Header text
    pdf.setTextColor(255, 255, 255) // White text
    pdf.setFontSize(24)
    pdf.text("Professional Agent Bio", 105, 20, { align: "center" })
    pdf.setFontSize(12)
    pdf.text("Generated by RealBio - The Next Level U", 105, 30, { align: "center" })

    // Reset text color to black
    pdf.setTextColor(0, 0, 0)

    // Agent name and brokerage
    pdf.setFontSize(18)
    pdf.setFont("helvetica", "bold")
    pdf.text(formData.name, 20, 60)

    pdf.setTextColor(182, 168, 136) // Vegas Gold
    pdf.setFontSize(16)
    pdf.text(formData.brokerage, 20, 70)

    // Experience info
    pdf.setTextColor(0, 0, 0)
    pdf.setFontSize(10)
    pdf.text(`Experience: ${formData.timeInIndustry} | Areas: ${formData.areasServed}`, 20, 80)

    // Divider line
    pdf.setDrawColor(229, 231, 235)
    pdf.line(20, 85, 190, 85)

    // Bio content
    pdf.setFontSize(11)
    pdf.setFont("helvetica", "normal")
    const splitBio = pdf.splitTextToSize(bio, 170)
    pdf.text(splitBio, 20, 95)

    // Calculate where bio ends
    const bioHeight = splitBio.length * 5
    let currentY = 95 + bioHeight + 15

    // Details section
    pdf.setFontSize(10)
    pdf.setFont("helvetica", "bold")
    pdf.setTextColor(107, 114, 128)
    pdf.text("AGENT DETAILS", 20, currentY)

    currentY += 8
    pdf.setFont("helvetica", "normal")
    pdf.setTextColor(75, 85, 99)
    pdf.text(`Experience: ${formData.timeInIndustry}`, 20, currentY)
    currentY += 5
    pdf.text(`Areas Served: ${formData.areasServed}`, 20, currentY)
    currentY += 5
    pdf.text(`Personal Interests: ${formData.hobbies}`, 20, currentY)

    // Footer
    currentY += 20
    pdf.setFillColor(249, 250, 251)
    pdf.rect(0, currentY, 210, 30, "F")

    pdf.setFontSize(8)
    pdf.setTextColor(107, 114, 128)
    pdf.text("Â© 2024 The Next Level U - Empowering Real Estate Professionals", 105, currentY + 10, { align: "center" })
    pdf.text("Generated with AI-powered tools designed for real estate success", 105, currentY + 16, {
      align: "center",
    })

    const pdfBuffer = Buffer.from(pdf.output("arraybuffer"))

    return new NextResponse(pdfBuffer, {
      headers: {
        "Content-Type": "application/pdf",
        "Content-Disposition": `attachment; filename="${formData.name.replace(/\s+/g, "_")}_Agent_Bio.pdf"`,
      },
    })
  } catch (error) {
    console.error("Error generating PDF:", error)
    throw new Error("Failed to generate PDF")
  }
}

async function sendEmail(formData: any, bio: string) {
  try {
    console.log("=== STARTING EMAIL SEND ===")
    console.log("Resend API Key exists:", !!process.env.RESEND_API_KEY)
    console.log("Form data:", { name: formData.name, email: formData.email })

    // Validate required data
    if (!formData.email) {
      throw new Error("Email address is required")
    }

    if (!formData.name) {
      throw new Error("Name is required")
    }

    if (!bio) {
      throw new Error("Bio content is required")
    }

    // Create HTML content
    const bioHTML = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <title>${formData.name} - Professional Agent Bio</title>
        <style>
          body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
          }
          .header {
            background: linear-gradient(135deg, #b6a888, #a89977);
            color: white;
            padding: 30px;
            text-align: center;
            margin-bottom: 30px;
            border-radius: 8px;
          }
          .header h1 {
            margin: 0;
            font-size: 28px;
          }
          .header p {
            margin: 10px 0 0;
            font-size: 16px;
          }
          .agent-name {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 5px;
            color: #1f2937;
          }
          .brokerage {
            font-size: 18px;
            color: #b6a888;
            margin-bottom: 20px;
          }
          .divider {
            border-top: 1px solid #e5e7eb;
            margin: 20px 0;
          }
          .bio-content {
            font-size: 16px;
            line-height: 1.8;
            margin-bottom: 30px;
            color: #374151;
          }
          .details-title {
            font-size: 14px;
            font-weight: bold;
            color: #6b7280;
            margin-bottom: 10px;
            text-transform: uppercase;
          }
          .details {
            font-size: 14px;
            color: #4b5563;
            margin-bottom: 5px;
          }
          .footer {
            background: #f9fafb;
            border-top: 1px solid #e5e7eb;
            padding: 20px;
            text-align: center;
            font-size: 12px;
            color: #6b7280;
            margin-top: 40px;
            border-radius: 8px;
          }
        </style>
      </head>
      <body>
        <div class="header">
          <h1>Professional Agent Bio</h1>
          <p>Generated by RealBio - The Next Level U</p>
        </div>
        
        <div class="agent-name">${formData.name}</div>
        <div class="brokerage">${formData.brokerage}</div>
        
        <div class="divider"></div>
        
        <div class="bio-content">
          ${bio.replace(/\n/g, "<br>")}
        </div>
        
        <div class="details-title">AGENT DETAILS</div>
        <div class="details"><strong>Experience:</strong> ${formData.timeInIndustry}</div>
        <div class="details"><strong>Areas Served:</strong> ${formData.areasServed}</div>
        <div class="details"><strong>Personal Interests:</strong> ${formData.hobbies}</div>
        
        <div class="footer">
          <p>Â© 2024 The Next Level U - Empowering Real Estate Professionals</p>
          <p>Generated with AI-powered tools designed for real estate success</p>
        </div>
      </body>
      </html>
    `

    console.log("Preparing email data...")

    const emailData = {
      from: "Mike Puma - The Next Level U <noreply@marketing.thenextlevelu.com>",
      to: [formData.email],
      subject: "Your Professional Agent Bio - RealBio by The Next Level U",
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <div style="background: linear-gradient(135deg, #b6a888, #a89977); padding: 20px; text-align: center;">
            <h1 style="color: white; margin: 0;">Your Professional Bio is Ready!</h1>
            <p style="color: white; margin: 10px 0 0 0;">Generated by RealBio - The Next Level U</p>
          </div>
          
          <div style="padding: 30px; background: #f9fafb;">
            <h2 style="color: #1f2937; margin-bottom: 20px;">Hi ${formData.name},</h2>
            
            <p style="color: #4b5563; line-height: 1.6;">
              Your professional agent bio has been generated! This compelling, first-person bio is designed to connect with all personality types and showcase your unique value in the real estate market.
            </p>
            
            <div style="background: white; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #b6a888;">
              <h3 style="color: #1f2937; margin-top: 0;">Your Agent Bio:</h3>
              <p style="color: #4b5563; line-height: 1.6; white-space: pre-wrap;">${bio}</p>
            </div>
            
            <p style="color: #4b5563; line-height: 1.6;">
              I've also attached a beautifully formatted HTML version of your bio that you can use for professional presentations and marketing materials.
            </p>

            <div style="background: #e0f2fe; padding: 15px; border-radius: 8px; margin: 20px 0;">
              <h4 style="color: #0277bd; margin: 0 0 10px 0;">ðŸ’¡ How to Use Your Bio:</h4>
              <ul style="color: #01579b; margin: 0; padding-left: 20px;">
                <li>Add it to your website's "About" page</li>
                <li>Use it in your social media profiles</li>
                <li>Include it in marketing materials and brochures</li>
                <li>Add it to your email signature</li>
                <li>Use it for speaking engagements and networking events</li>
              </ul>
            </div>
            
            <p style="color: #6b7280; font-size: 14px; line-height: 1.6;">
              Best regards,<br>
              Mike Puma<br>
              The Next Level U Team<br>
              <a href="mailto:MikePuma@c21be.com" style="color: #b6a888;">MikePuma@c21be.com</a>
            </p>
          </div>
          
          <div style="background: #1f2937; padding: 20px; text-align: center;">
            <p style="color: #9ca3af; margin: 0; font-size: 14px;">
              Â© 2024 The Next Level U. Empowering real estate professionals with AI-powered tools.
            </p>
          </div>
        </div>
      `,
      attachments: [
        {
          filename: `${formData.name.replace(/\s+/g, "_")}_Agent_Bio.html`,
          content: bioHTML,
        },
      ],
    }

    console.log("Sending email via Resend...")
    console.log("Email to:", emailData.to)
    console.log("Email from:", emailData.from)

    const response = await resend.emails.send(emailData)

    console.log("Resend response:", response)

    if (response.error) {
      console.error("Resend error details:", response.error)
      throw new Error(`Resend API error: ${response.error.message}`)
    }

    if (!response.data) {
      throw new Error("No response data from Resend")
    }

    console.log("Email sent successfully:", response.data.id)
    return NextResponse.json({
      success: true,
      messageId: response.data.id,
      message: "Email sent successfully",
    })
  } catch (error) {
    console.error("=== EMAIL SEND ERROR ===")
    console.error("Error details:", error)
    console.error("Error stack:", error instanceof Error ? error.stack : "No stack trace")

    return NextResponse.json(
      {
        success: false,
        error: `Failed to send email: ${error instanceof Error ? error.message : "Unknown error"}`,
        details: error instanceof Error ? error.stack : error,
      },
      { status: 500 },
    )
  }
}
